#!/bin/bash
# impute5 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

main() {

    echo "Value of ref_bcf: '$ref_bcf'"
    echo "Value of ref_idx: '$ref_idx'"
    echo "Value of ref_bin: '$ref_bin'"
    echo "Value of ref_fam: '$ref_fam'"
    echo "Value of tar_bcf: '$tar_bcf'"
    echo "Value of tar_idx: '$tar_idx'"
    echo "Value of tar_bin: '$tar_bin'"
    echo "Value of tar_fam: '$tar_fam'"
    echo "Value of map: '$map'"
    echo "Value of out_pfx: '$out_pfx'"
    echo "Value of buf_reg: '$buf_reg'"
    echo "Value of imp_reg: '$imp_reg'"
    echo "Value of num_thr: '$num_thr'"
    echo "Value of imp_arg: '$imp_arg'"
    echo "Value of mount_inputs: '$mount_inputs'"
    

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

	if [ "$mount_inputs" == "true" ]; then
		dx-mount-all-inputs
	else
    		dx-download-all-inputs --parallel
	fi

	ln -s ${ref_bcf_path} ${ref_bcf_name}
	ln -s ${ref_idx_path} ${ref_idx_name}
	ln -s ${tar_bcf_path} ${tar_bcf_name}
	ln -s ${tar_idx_path} ${tar_idx_name}
		
	if [ -n "$ref_bin" ]; then
    	ln -s ${ref_bin_path} ${ref_bin_name}
    fi
    
    if [ -n "$ref_fam" ]; then
    	ln -s ${ref_fam_path} ${ref_fam_name}
    fi
    
    if [ -n "$tar_bin" ]; then
    	ln -s ${tar_bin_path} ${tar_bin_name}
    fi
    
    if [ -n "$tar_fam" ]; then
    	ln -s ${tar_fam_path} ${tar_fam_name}
    fi
    
	if [ -n "$map" ]; then
       	ln -s ${map_path} ${map_name}
    	map_opt="--m ${map_name}"
    fi
    
    /usr/bin/time -p -o ${out_pfx}.time impute5 --h ${ref_bcf_name} --g ${tar_bcf_name} ${map_opt} --buffer-region ${buf_reg} --r ${imp_reg} --o ${out_pfx}.bcf --l ${out_pfx}.log --threads ${num_thr} --out-buffer ${imp_args}

    out_bcf=$(dx upload ${out_pfx}.bcf --brief)
    out_idx=$(dx upload ${out_pfx}.bcf.csi --brief)
    out_log=$(dx upload ${out_pfx}.log --brief)
    out_tim=$(dx upload ${out_pfx}.time --brief)
    

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output out_bcf "$out_bcf" --class=file
    dx-jobutil-add-output out_idx "$out_idx" --class=file
    dx-jobutil-add-output out_log "$out_log" --class=file
    dx-jobutil-add-output out_tim "$out_tim" --class=file
}
